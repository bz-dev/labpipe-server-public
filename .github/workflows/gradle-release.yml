name: Gradle CI

on: [push, create]
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build
      if: github.event_name == 'push'
      run: ./gradlew build
    - name: Build for release [tag only]
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: sed "s/0.0.0/$TAG/g" build.gradle.kts > _build.gradle.kts && mv _build.gradle.kts build.gradle.kts &&./gradlew build -x jar
      env:
        TAG: ${{github.event.ref}}
    - name: Create GitHub release [tag only]
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: |
        curl --data $'{"tag_name":"${{github.event.ref}}","target_commitish": "master","name": "${{github.event.ref}}","body": "Release ${{github.event.ref}}","draft": false,"prerelease": true}' https://api.github.com/repos/$GITHUB_REPOSITORY/releases?access_token=$GITHUB_TOKEN
        RELEASE_ID=$(curl https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/${{github.event.ref}}?access_token=$GITHUB_TOKEN | jq '.id')
        echo "Release id: $RELEASE_ID"
        sleep 10
        for filename in build/libs/*; do curl --data-binary "@$filename" -H "Content-Type: application/java-archive" "https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID/assets?name=$(basename $filename)&access_token=$GITHUB_TOKEN" ; done
